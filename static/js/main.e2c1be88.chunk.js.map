{"version":3,"sources":["components/NavigationBar.js","components/Menu.js","components/Welcome.js","components/Resume.js","components/AboutMe.js","components/Body.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","NavigationBar","classes","useState","className","AppBar","position","Toolbar","Typography","variant","display","paper","margin","Menu","Paper","MenuList","to","MenuItem","marginTop","height","Home","props","Resume","AboutMe","Body","path","App","document","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e2c1be88.chunk.js","sourcesContent":["import React , {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function NavigationBar() {\r\n  const classes = useStyles();\r\n\r\n  const [openLeftMenu, setOpenLeftMenu] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Seiam's Webpage\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(2)\r\n  },\r\n}));\r\n\r\nfunction Menu() {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n      <Paper className={classes.paper}>\r\n        <MenuList>\r\n          {/* <MenuItem><Link to=\"/\">Home</Link></MenuItem>\r\n          <MenuItem><Link to=\"/resume\">Resume</Link></MenuItem>\r\n          <MenuItem><Link to=\"/about-me\">About Me</Link></MenuItem> */}\r\n          <Link to=\"/home\"><MenuItem>Home</MenuItem></Link>\r\n          <Link to=\"/resume\"><MenuItem>Resume</MenuItem></Link>\r\n          <Link to=\"/about-me\"><MenuItem>About Me</MenuItem></Link>\r\n        </MenuList>\r\n      </Paper>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","import React , {useState} from 'react';\r\nimport {Paper} from \"@material-ui/core\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    paper: {\r\n        marginRight: theme.spacing(2),\r\n        marginTop: theme.spacing(2),\r\n        height: '400px'\r\n    },\r\n}));\r\n\r\nexport default function Home(props) {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <h2 className=\"m-2 p-2\">Welcome to my webpage!</h2>\r\n\r\n        </Paper>\r\n    );\r\n}","import React , {useState} from 'react';\r\nimport {Paper} from \"@material-ui/core\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    paper: {\r\n        marginRight: theme.spacing(2),\r\n        marginTop: theme.spacing(2),\r\n        height: '400px'\r\n    },\r\n}));\r\n\r\nexport default function Resume(props) {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <h2 className=\"m-2 p-2\">Welcome to my resume!</h2>\r\n\r\n        </Paper>\r\n    );\r\n}","import React , {useState} from 'react';\r\nimport {Paper} from \"@material-ui/core\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    paper: {\r\n        marginRight: theme.spacing(2),\r\n        marginTop: theme.spacing(2),\r\n        height: '400px'\r\n    },\r\n}));\r\n\r\nexport default function AboutMe(props) {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <h2 className=\"m-2 p-2\">Welcome to my about me!</h2>\r\n\r\n        </Paper>\r\n    );\r\n}","import React , {useState} from 'react';\r\nimport Menu from './Menu'\r\nimport Home from './Welcome'\r\nimport Resume from './Resume'\r\nimport AboutMe from './AboutMe'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\n  \r\n\r\nexport default function Body(props) {\r\n\r\n  return (\r\n    <div className=\"row\">\r\n        <Router>\r\n            <div className=\"col-4\">\r\n                <Menu/>\r\n            </div>\r\n            <div className=\"col-8\">\r\n                <Switch>\r\n                    <Route path=\"/home\">\r\n                        <Home/>\r\n                    </Route>\r\n                    <Route path=\"/resume\">\r\n                        <Resume/>\r\n                    </Route>\r\n                    <Route path=\"/about-me\">\r\n                        <AboutMe/>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <Redirect to=\"/home\" />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport NavigationBar from './components/NavigationBar'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Body from './components/Body'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n\r\n  const classes = useStyles();\r\n\r\n  document.title = \"Seiam's Webpage\"\r\n  return (\r\n    <div>\r\n    \t<NavigationBar/>\r\n      <Body/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}